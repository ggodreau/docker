Helpful commands:

Running docker images:
docker run --rm busybox sleep 1 # automatically removes container from docker ps -a after the container exits
docker run --name myContainerName busybox # names your container instead of giving it an autogenerated name
docker inspect myContainerName # outputs container info to terminal in json format

Removing images:
docker -rmi busybox # removes image 'busybox'

Running Tomcat with port remapping:
docker run -it --rm -p 8888:8080 tomcat:9.0

Viewing container logs:
docker logs <container long ID> # outputs the system logs to STDOUT

Layers:
docker history busybox # shows layers that made up the busybox image

Committing container changes to a new image:
docker ps -a # get the namme or ID of the image you just ran
docker commit <ID of container you just ran> jameslee/debian:1.00 # commits your image diff to your docker hub account, returns the long ID of the image to you

Docker build:
docker build -t greg/ubuntu:2.00 . # builds with new tag greg/ubuntu:2.00 from 'Dockerfile' contained in current dir, .
docker tag <imageID> greg/ubuntu:1.00  # changes tag of imageID to greg/ubuntu:1.00

Dockerfile:
CMD - command that runs upon container startup
RUN - command that runs during build
COPY - copies files from local directory to container being built
ADD - can do copy from local dir, as well as decompress compressed local files, and pull files from internets
WORKDIR - changes LOCAL (host) directory
USER - changes user within the environment (like su?)

Getting IP address of container from outside container:
docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' 230f1bf4dfed

Docker Push:
docker login --username=godreau # after this, it will prompt for the password

Open a shell within a running container:
docker exec -it <containerID> bash
